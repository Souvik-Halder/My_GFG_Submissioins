class gfg {
    static Node reverse(Node head){
        Node prev=null;
        Node curr=head;
        Node next=null;
        while(curr!=null){
            next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    Node reorderlist(Node head) {
       Node slow=head;
       Node fast=head.next;
       while(fast!=null && fast.next!=null){
           slow=slow.next;
           fast=fast.next.next;
       }
       Node first=head;
      Node second=reverse(slow.next);
      slow.next=null;
      //merging the two linked list
      //we have taken the linked second because it will always shorter one if the total nodes will be odd or even
       while(second!=null){
           Node temp1=first.next;
           first.next=second;
            Node temp2=second.next;
            second.next=temp1;
            first=temp1;
            second=temp2;
            }
            return head;
    }
}
